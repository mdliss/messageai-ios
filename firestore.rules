rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // Users can read all profiles, write their own
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow write: if isOwner(userId);
    }
    
    // Conversations: participants only
    match /conversations/{conversationId} {
      allow read: if isAuthenticated() && request.auth.uid in resource.data.participantIds;
      allow create: if isAuthenticated() && request.auth.uid in request.resource.data.participantIds;
      allow update: if isAuthenticated() && request.auth.uid in resource.data.participantIds;
      allow delete: if isAuthenticated() && request.auth.uid in resource.data.participantIds;
      
      // Messages within conversation - Allow participants to delete any message (needed for conversation deletion)
      match /messages/{messageId} {
        allow read: if isAuthenticated();
        allow create: if isAuthenticated();
        allow update: if isAuthenticated();
        // FIXED: Allow deletion if user is conversation participant (not just message sender)
        // This enables conversation deletion which requires deleting all messages
        allow delete: if isAuthenticated() && 
          request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participantIds;
      }
      
      // AI insights - SIMPLIFIED FOR MVP  
      match /insights/{insightId} {
        allow read, write: if isAuthenticated();
      }
      
      // Action items - SIMPLIFIED FOR MVP
      match /actionItems/{itemId} {
        allow read, write: if isAuthenticated();
      }
      
      // Typing indicators - SIMPLIFIED FOR MVP
      match /typing/{userId} {
        allow read, write: if isAuthenticated();
      }
      
      // NEW: Blockers - participants can read/write
      match /blockers/{blockerId} {
        allow read, write: if isAuthenticated();
      }
      
      // NEW: Polls
      match /polls/{pollId} {
        allow read, write: if isAuthenticated();
      }
    }
    
    // NEW: User-specific blocker alerts
    match /users/{userId}/blockerAlerts/{alertId} {
      allow read, write: if isAuthenticated() && isOwner(userId);
    }
    
    // NEW: Sentiment tracking aggregates (read-only for managers)
    match /sentimentTracking/{document=**} {
      allow read: if isAuthenticated();
      allow write: if false;  // Only cloud functions can write
    }
  }
}

